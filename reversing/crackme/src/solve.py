from capstone import *
from binascii import unhexlify

code = "5589E55DC390909090909090909090905589E583EC048B45088845FC807DFC540F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E81C0FB6C083F82B0F94C00FB6C0C9C35589E583EC048B45088845FC807DFC310F94C00FB6C0C9C35589E583EC048B45088845FC807DFC380F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05E00000000FB6C083F85B0F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E80A0FB6C083F8600F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E8800FB6C03DF50000000F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05E10000000FB6C083F84E0F94C00FB6C0C9C35589E583EC048B45088845FC807DFC700F94C00FB6C0C9C35589E583EC048B45088845FC807DFC5F0F94C00FB6C0C9C35589E583EC048B45088845FC807DFC750F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05A50000000FB6C083F8150F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E81E0FB6C083F8410F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E8420FB6C083F8280F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05CC0000000FB6C083F8410F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E8120FB6C083F85B0F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05A90000000FB6C083F8190F94C00FB6C0C9C35589E583EC048B45088845FC807DFC5F0F94C00FB6C0C9C35589E583EC048B45088845FC807DFC750F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05850000000FB6C03DF50000000F94C00FB6C0C9C35589E583EC048B45088845FC807DFC5F0F94C00FB6C0C9C35589E583EC048B45088845FC807DFC610F94C00FB6C0C9C35589E583EC048B45088845FC807DFC6E0F94C00FB6C0C9C35589E583EC048B45088845FC807DFC640F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E82F0FB6C083F8300F94C00FB6C0C9C35589E583EC048B45088845FC807DFC670F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E8030FB6C083F8620F94C00FB6C0C9C35589E583EC048B45088845FC807DFC740F94C00FB6C0C9C35589E583EC048B45088845FC807DFC5F0F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E8470FB6C083F81D0F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E81B0FB6C083F8150F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E8350FB6C083F8420F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC83E81B0FB6C083F8530F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC058B0000000FB6C03DAC0000000F94C00FB6C0C9C35589E583EC048B45088845FC0FB645FC05C10000000FB6C083F83E0F94C00FB6C0C9C3"
code = unhexlify(code)

dec = ""

val = 0
md = Cs(CS_ARCH_X86, CS_MODE_32)
for i in md.disasm(code, 0x1000):
    m = i.mnemonic
    if m == "add":
        val = -int(i.op_str.split(" ")[1], 16)
    elif m == "sub" and "esp" not in i.op_str:
        sub = True
        val = int(i.op_str.split(" ")[1], 16)
    elif m == "cmp":
        cmp_val = int(i.op_str.split(", ")[1], 16)
        dec += chr((cmp_val + val) & 0xff)
        val = 0

    #print("0x%x:\t%s\t%s" %(i.address, i.mnemonic, i.op_str))

print "flag: {}".format(dec)
